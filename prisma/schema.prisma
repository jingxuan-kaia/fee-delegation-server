generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model DApp {
  id              String     @id @default(cuid())
  name            String     @unique
  url             String
  balance         String     @default("0")
  totalUsed       String     @default("0")
  createdAt       DateTime   @default(now())
  active          Boolean    @default(true)
  terminationDate String?    @db.Text
  contracts       Contract[]
  senders         Sender[]
  apiKeys         ApiKey[]
}

model ApiKey {
  id        String   @id @default(cuid())
  key       String   @unique
  name      String
  dapp      DApp     @relation(fields: [dappId], references: [id], onDelete: Cascade)
  dappId    String
  createdAt DateTime @default(now())

  @@index([dappId], map: "ApiKey_dappId_fkey")
}

model Contract {
  id          String   @id @default(cuid())
  address     String   @unique
  hasSwap     Boolean  @default(false)
  swapAddress String?
  dapp        DApp     @relation(fields: [dappId], references: [id], onDelete: Cascade)
  dappId      String
  createdAt   DateTime @default(now())

  @@index([dappId], map: "Contract_dappId_fkey")
}

model Sender {
  id        String @id @default(cuid())
  address   String @unique
  dappId    String
  dapp      DApp    @relation(fields: [dappId], references: [id], onDelete: Cascade)

  @@index([dappId], map: "Sender_dappId_fkey")
}
